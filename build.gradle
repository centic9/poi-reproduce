apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'application'

mainClassName = 'org.dstadler.poi.TestCloseBehavior'
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Reproduce some behavior of Apache POI against different versions', 'Implementation-Version': archiveVersion
    }
}

sourceCompatibility = JavaVersion.VERSION_11

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    // maven { url 'https://repository.apache.org/content/groups/staging/'}
}

// this is the version of the jar-files of Apache POI that are used for testing
if (!project.hasProperty('poiVersion')) {
	ext.poiVersion = '5.2.4'
}

if (!project.hasProperty('closeTest')) {
	ext.closeTest = 'stream'
}

if (!project.hasProperty('poiDir')) {
	ext.poiDir = '/opt/poi'
}

dependencies {
    implementation 'org.apache.poi:poi:' + poiVersion
    implementation 'org.apache.poi:poi-ooxml:' + poiVersion

    /* // Testing with latest trunk-POI
    implementation files(poiDir + '/lib/main/commons-collections4-4.4.jar')
    implementation files(poiDir + '/lib/main/commons-math3-3.6.1.jar')
    implementation files(poiDir + '/lib/main/SparseBitSet-1.3.jar')
    implementation files(poiDir + '/lib/ooxml/xmlbeans-5.1.1.jar')
    implementation files(poiDir + '/build/dist/maven/poi/poi-' + poiVersion + '.jar')
    implementation files(poiDir + '/build/dist/maven/poi-ooxml/poi-ooxml-' + poiVersion + '.jar')
    //compile files(poiDir + '/build/dist/maven/poi-ooxml-lite/poi-ooxml-lite-' + poiVersion + '.jar')
    implementation files(poiDir + '/build/dist/maven/poi-ooxml-full/poi-ooxml-full-' + poiVersion + '.jar')
    implementation files(poiDir + '/build/dist/maven/poi-scratchpad/poi-scratchpad-' + poiVersion + '.jar')

	implementation 'commons-io:commons-io:2.15.0'
	implementation 'org.apache.commons:commons-compress:1.24.0'
	*/

	implementation 'org.apache.logging.log4j:log4j-core:2.21.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion = '7.6.1'
}

jacoco {
    toolVersion = '0.8.10'
}

tasks.register('runClose', JavaExec) {
	dependsOn compileJava
	description = 'Performs a check with file-leak-detector and the test application'

	jvmArgs = [
			'-Xmx512m',
			'-javaagent:/opt/file-leak-detector/target/file-leak-detector-1.18-SNAPSHOT-jar-with-dependencies.jar=http=0,strong,excludes=/opt/apache/poi/git-svn/file-leak-detector.exclude,dumpatshutdown',
			'-XX:+HeapDumpOnOutOfMemoryError', '-XX:HeapDumpPath=/tmp'
	]

	mainClass = 'org.dstadler.poi.TestCloseBehavior'
	args = [closeTest]
	classpath = sourceSets.main.runtimeClasspath
}
